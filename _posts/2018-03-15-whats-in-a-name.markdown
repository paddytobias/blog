---
layout: post
title: What's in a name?
date: 2018-03-15 17:00:00 +1000
description: Surprise, surprise. Learning a new language is mostly learning new terminology # Add post description (optional)
img: workflow.jpg # Add image post (optional)
tags: [terminology, databases]
---

<p>Second week of the masters and what I'm quickly realising is that what's most involved in learning computer programming (of any language!) and computer systems is becoming familiar with a new lexicon of words. This might seem a bit banale upon first read, but it isn't! You can pass it off as a specialised language; as jargon, perhaps? Or you may say, "well that's the problem that anyone faces when learning a new language." But it's not that simple.</p>
<p>Imagine this: you have come to know the eatable, round things that come out of the ground (which, as stereotypes would have it, all Irish love!) as "potatoes", and then I start telling you how to make potato soup, but in my instructions I instead refer to potatoes as "raspberries". Imagine you're confusion, mostly due to your understanding of a raspberry. You would be thinking about how bad raspberries would taste in a broth with onion and garlic! This problem is not completely analogous with the experience of learning another human-spoken (aka, natural) language because, in this scenario, you probably don't have pre-existing meanings for the new words you're about to learn.</p> 
<p>If you speak English and learn popular high-level languages like Python, R or SQL, then you will at some point no doubt have to overcome _re_learning terms that you previously felt familiar with, like "compiler" (_something that compiles things?_) or "attributes" (_the features of something?_) or, a recent favourite, "two dimensional arrays" (_sorry, what? Why not just call them "tables" or "datatables" if you insist?_). This is not relearning for the sake of word-dropping in a conversations with your buddies in the line for coffee. It is so so you can get the full technical benefits of them in your programming. Terms hold the immediate benefit of communication, of passing information from one person (or thing!) to another, but they also have the potential of excluding people (or things!). If one doesn't interpret the terms as they are intended to be interpreted, then one can't join the conversation.</p>
<p>This simple lesson is most evident to me in my unit on databases. There is a whole 1000-page textbook full of new-old language for me to learn, beyond just learning SQL statements. The new terms to learn aren't proving to be so much of a problem - I never had a meaning for "tuples" before I learnt that it mean rows in a table of data. It is the "old" terms that are a bit more difficult. A part of this week's lesson has been learning that "tables" in database language are known as "relations". Now if you had _some_ experience with databases, particularly relational databases, you would be forgiven (at least by me!) for thinking that "relations" refers to the commonalities or intersections between two data tables. But, apparently not, relations **are** the tables. Don't ask me what relations between tables are called. You'll have to wait for what Week 3 has store.</p>
<p>There's lots more to add to this post, but that's all I have for my first. The moral of this lesson has been, learn the language, not just speak the language, but to _use_ the language. Thanks for reading.</p>
